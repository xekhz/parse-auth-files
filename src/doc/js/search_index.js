var search_data = {"index":{"searchIndex":["cipher","csv_writer","debugger","draw_map","log_analyzer","machinescan","object","pdf_report","program","scanport","sniffer","sql_reader_writer","ask_for_password()","check_user()","check_user_password()","cipher()","create_user()","create_user_database()","csv_cap_to_sql()","debug()","decipher()","delete_user()","delete_user_login()","detections()","do_pdf_file()","draw_randomize()","firewall_parser()","get_country_code2()","get_country_code3()","get_country_colors()","get_country_list_code2()","get_country_list_code3()","get_country_name()","get_detections()","get_filename()","get_firewall_detections()","get_level()","get_open_ports()","get_report()","get_services()","get_single_char()","information_by_date()","input_length_check()","insert_new_regexp_service()","main()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","parse_firewall_file()","parse_log_file()","pcap_array_format()","pcap_hash_format()","pcap_writer()","pcap_writer_array()","process_csv_file()","randomize_country_colors()","resolv_address()","run()","run()","run()","run()","scan()","service_csv_to_sql()","service_parser()","services()","set_level()","sql_to_cap_csv()","sql_to_csv_service()","start_document()","start_menu()","strip_protocol()","user_check()","user_menu()","writer_all_log()","writer_by_date()"],"longSearchIndex":["cipher","csv_writer","debugger","draw_map","log_analyzer","machinescan","object","pdf_report","program","scanport","sniffer","sql_reader_writer","cipher#ask_for_password()","sql_reader_writer#check_user()","sql_reader_writer#check_user_password()","cipher#cipher()","sql_reader_writer#create_user()","sql_reader_writer#create_user_database()","sql_reader_writer#csv_cap_to_sql()","debugger::debug()","cipher#decipher()","sql_reader_writer#delete_user()","sql_reader_writer#delete_user_login()","csv_writer#detections()","pdf_report#do_pdf_file()","draw_map#draw_randomize()","log_analyzer#firewall_parser()","draw_map#get_country_code2()","draw_map#get_country_code3()","draw_map#get_country_colors()","log_analyzer#get_country_list_code2()","log_analyzer#get_country_list_code3()","draw_map#get_country_name()","log_analyzer#get_detections()","draw_map#get_filename()","log_analyzer#get_firewall_detections()","debugger::get_level()","scanport#get_open_ports()","machinescan#get_report()","pdf_report#get_services()","program#get_single_char()","draw_map#information_by_date()","program#input_length_check()","log_analyzer#insert_new_regexp_service()","object#main()","cipher::new()","csv_writer::new()","debugger::new()","draw_map::new()","log_analyzer::new()","machinescan::new()","pdf_report::new()","program::new()","scanport::new()","sniffer::new()","sql_reader_writer::new()","log_analyzer#parse_firewall_file()","log_analyzer#parse_log_file()","sniffer#pcap_array_format()","sniffer#pcap_hash_format()","csv_writer#pcap_writer()","csv_writer#pcap_writer_array()","draw_map#process_csv_file()","draw_map#randomize_country_colors()","machinescan#resolv_address()","machinescan#run()","program#run()","scanport#run()","sniffer#run()","scanport#scan()","sql_reader_writer#service_csv_to_sql()","log_analyzer#service_parser()","log_analyzer#services()","debugger::set_level()","sql_reader_writer#sql_to_cap_csv()","sql_reader_writer#sql_to_csv_service()","pdf_report#start_document()","program#start_menu()","machinescan#strip_protocol()","program#user_check()","program#user_menu()","pdf_report#writer_all_log()","pdf_report#writer_by_date()"],"info":[["Cipher","","Cipher.html","",""],["Csv_writer","","Csv_writer.html","","<p>apagar os csv q estao nas directorias\n"],["Debugger","","Debugger.html","",""],["Draw_map","","Draw_map.html","","<p>Classe responsavel por processar ficheiros CSV processa ficheiros CSV para\ncriar os mapas\n"],["Log_analyzer","","Log_analyzer.html","",""],["MachineScan","","MachineScan.html","","\n<pre class=\"ruby\"><span class=\"ruby-constant\">Este</span> <span class=\"ruby-identifier\">programa</span> <span class=\"ruby-identifier\">recebe</span> <span class=\"ruby-identifier\">um</span> <span class=\"ruby-constant\">URL</span> <span class=\"ruby-identifier\">ou</span> <span class=\"ruby-identifier\">endereco</span> <span class=\"ruby-constant\">IPV4</span> <span class=\"ruby-identifier\">e</span> <span class=\"ruby-identifier\">executa</span> <span class=\"ruby-identifier\">um</span> <span class=\"ruby-identifier\">portscan</span>\n</pre>\n<p>Autor &mdash; Pedro Ferreira - Nº14976\n\n"],["Object","","Object.html","",""],["Pdf_report","","Pdf_report.html","","<p>corrigido irao, vietnam e koreias\n"],["Program","","Program.html","",""],["ScanPort","","ScanPort.html","",""],["Sniffer","","Sniffer.html","","<p>sudo RUBYLIB=/var/lib/gems/2.1.0/gems/ruby-pcap-0.7.9/lib/pcap/ ruby2.1\nSniffer.rb\n"],["Sql_Reader_Writer","","Sql_Reader_Writer.html","",""],["ask_for_password","Cipher","Cipher.html#method-i-ask_for_password","()","<p>Solicita a password para poder de/cifrar os dados\n"],["check_user","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-check_user","(user)","<p>Verifica se o user existe\n<p>return boolean\n"],["check_user_password","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-check_user_password","(user)","<p>Recebe como parametreo o nome do utilizadar e retorna um boolean mediante a\ncondicao se true or false …\n"],["cipher","Cipher","Cipher.html#method-i-cipher","(message)","<p>Recebe uma string e devolve cifrada Utiliza para gerar a cifra o\naes-256-cbc e cifra com o a chave solicitada …\n"],["create_user","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-create_user","(user)","<p>cria um utilizador na BD\n"],["create_user_database","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-create_user_database","(user)","<p>cria uma BD por cada user cria as tabelas necessarias\n"],["csv_cap_to_sql","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-csv_cap_to_sql","()","<p>Pega no conteudo de um ficheiro CAP  file Cifra o conteudo da linha com a\npassword fornecida pelo utiliador …\n"],["debug","Debugger","Debugger.html#method-c-debug","(msg,l)",""],["decipher","Cipher","Cipher.html#method-i-decipher","(enc_message)","<p>recebe uma mensagem cifrada e decifra\n"],["delete_user","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-delete_user","()","<p>Apaga toda a informacao do utilizador\n"],["delete_user_login","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-delete_user_login","(user)","<p>Apaga o login do utilizador\n"],["detections","Csv_writer","Csv_writer.html#method-i-detections","(det)","<p>Recebe uma hash e imprime para CSV FORMATO HASH  { “ssh”=&gt;{\n\n<pre>&quot;177.154.231.59&quot;=&gt;\n          ...</pre>\n"],["do_pdf_file","Pdf_report","Pdf_report.html#method-i-do_pdf_file","()",""],["draw_randomize","Draw_map","Draw_map.html#method-i-draw_randomize","(path)","<p>desenha o mapa\n"],["firewall_parser","Log_analyzer","Log_analyzer.html#method-i-firewall_parser","(l)","<p>identico ao service parser porem como a estrutura do ficheiro é diferente o\ncodigo de analise tambem …\n"],["get_country_code2","Draw_map","Draw_map.html#method-i-get_country_code2","()","<p>retorna a variavel de instancia @country_code2 ( com 2 digitos q\nidentificam o pais)\n"],["get_country_code3","Draw_map","Draw_map.html#method-i-get_country_code3","()","<p>retorna a variavel de instancia @country_code3 ( com 3 digitos q\nidentificam o pais)\n"],["get_country_colors","Draw_map","Draw_map.html#method-i-get_country_colors","()","<p>retorna a variavel de instancia @country_color que é uma hash com pais e\ncor\n"],["get_country_list_code2","Log_analyzer","Log_analyzer.html#method-i-get_country_list_code2","()","<p>retorna a variavel de instancia @country_code2 ( com 2 digitos q\nidentificam o pais)\n"],["get_country_list_code3","Log_analyzer","Log_analyzer.html#method-i-get_country_list_code3","()","<p>retorna a variavel de instancia @country_code2 ( com 2 digitos q\nidentificam o pais)\n"],["get_country_name","Draw_map","Draw_map.html#method-i-get_country_name","()","<p>retorna a variavel de instancia @country_name\n"],["get_detections","Log_analyzer","Log_analyzer.html#method-i-get_detections","()","<p>retorna a lista de servicos e os enderecos ipv4 com hits variavel de\ninstancia @detections\n"],["get_filename","Draw_map","Draw_map.html#method-i-get_filename","()","<p>Obtem o nome do ficheiro com extensao csv\n"],["get_firewall_detections","Log_analyzer","Log_analyzer.html#method-i-get_firewall_detections","()","<p>retorna a lista de servicos e os enderecos ipv4 com hits variavel de\ninstancia @fff foi criada esta funcao …\n"],["get_level","Debugger","Debugger.html#method-c-get_level","()",""],["get_open_ports","ScanPort","ScanPort.html#method-i-get_open_ports","()",""],["get_report","MachineScan","MachineScan.html#method-i-get_report","()","<p>obtem a informacao dos portos que estão abertos num determinado momento\n"],["get_services","Pdf_report","Pdf_report.html#method-i-get_services","()","<p>Verifica a existencia do ficheiro csv e para cada existencia retira a\ninformacao e gera os mapas  a incluir …\n"],["get_single_char","Program","Program.html#method-i-get_single_char","()","<p>Funcao para ler um char do teclado e retornar imediatamente\n"],["information_by_date","Draw_map","Draw_map.html#method-i-information_by_date","()","<p>retorna a variavel de instancia @information_by_date com a informarcao das\nocorrecias\n"],["input_length_check","Program","Program.html#method-i-input_length_check","(input,message)",""],["insert_new_regexp_service","Log_analyzer","Log_analyzer.html#method-i-insert_new_regexp_service","(k,re)","<p>Caso se pretenda introduzir uma nova expressao regular para executar a\nprocura de IPs mais correctamente …\n"],["main","Object","Object.html#method-i-main","()","<p>executa o porscan multiithread retorna a lista de portos abertos\n"],["new","Cipher","Cipher.html#method-c-new","()","<p>initializa o objecto\n\n<pre>sempre q for criado um objecto de cifra solicita uma chave(password)</pre>\n"],["new","Csv_writer","Csv_writer.html#method-c-new","(user, debug_level=0)",""],["new","Debugger","Debugger.html#method-c-new","()","<p>Class puramente auxiliar para controlar as mensagens de erro durante o\ndesenvolvimento genericamente …\n"],["new","Draw_map","Draw_map.html#method-c-new","(f)","<p>initializa o objecto Recebe o ficheiro csv que deve ser processado\nInstancia o objecto que desenha o …\n"],["new","Log_analyzer","Log_analyzer.html#method-c-new","(filename,debug_level)","<p>Initializa o objecto e tem como requisito o nome do ficheiro a processar\n"],["new","MachineScan","MachineScan.html#method-c-new","(address,start_port,end_port)","<p>metodo construtor recebe endereço , porto de inicio e porto de fim\n"],["new","Pdf_report","Pdf_report.html#method-c-new","(f,user)",""],["new","Program","Program.html#method-c-new","()",""],["new","ScanPort","ScanPort.html#method-c-new","(start_port, end_port, host)","<p>Initializa o object requisito porto de inicio e fim\n"],["new","Sniffer","Sniffer.html#method-c-new","(np=50,t=20)","<p>initializa o objecto\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tem</span> <span class=\"ruby-identifier\">como</span> <span class=\"ruby-identifier\">parametro</span> <span class=\"ruby-identifier\">opcional</span> <span class=\"ruby-identifier\">o</span> <span class=\"ruby-identifier\">numero</span> <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">pacotes</span> <span class=\"ruby-identifier\">que</span> <span class=\"ruby-identifier\">captura</span> <span class=\"ruby-identifier\">e</span> <span class=\"ruby-identifier\">o</span> <span class=\"ruby-identifier\">tempo</span> <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">captura</span>\n</pre>\n"],["new","Sql_Reader_Writer","Sql_Reader_Writer.html#method-c-new","(_user,nocipher=false)","<p>initializa o objecto e cria igualmente o objecto cifra\n"],["parse_firewall_file","Log_analyzer","Log_analyzer.html#method-i-parse_firewall_file","()","<p>A cada linha tenta faz o match para os servicos conhecidos.\n"],["parse_log_file","Log_analyzer","Log_analyzer.html#method-i-parse_log_file","()","<p>A cada linha tenta faz o match para os servicos conhecidos.\n"],["pcap_array_format","Sniffer","Sniffer.html#method-i-pcap_array_format","()",""],["pcap_hash_format","Sniffer","Sniffer.html#method-i-pcap_hash_format","()",""],["pcap_writer","Csv_writer","Csv_writer.html#method-i-pcap_writer","(pcap_hash_format)","<p>ESCREVE EM FORMATO CSV MAS COM UM CAMPO ExTRA\n"],["pcap_writer_array","Csv_writer","Csv_writer.html#method-i-pcap_writer_array","(pkt_array)",""],["process_csv_file","Draw_map","Draw_map.html#method-i-process_csv_file","()","<p>processa linha a linha o ficheiro csv em questao atravez de expressao\nregular faz o match e retira a …\n"],["randomize_country_colors","Draw_map","Draw_map.html#method-i-randomize_country_colors","()","<p>Para o desenho do mapa existem duas alternativas,\n<p>modo gradiente\n<p>modo manual ( sermos nos a definir q cor …\n"],["resolv_address","MachineScan","MachineScan.html#method-i-resolv_address","()","<p>Verifica se é um endereço IPV4 valido e caso seja um URL resolve o endereço\n"],["run","MachineScan","MachineScan.html#method-i-run","()","<p>executa a chama da portscanner Lança thread a thread que analiza por\ndefault 100 portos por thread\n<p>*segment_size …\n"],["run","Program","Program.html#method-i-run","()",""],["run","ScanPort","ScanPort.html#method-i-run","()",""],["run","Sniffer","Sniffer.html#method-i-run","()","<p>comeca a captura A captura esta limitada ao protocolo tcp  coloca toda a\nestrutura captura numa hastable …\n"],["scan","ScanPort","ScanPort.html#method-i-scan","(port)","<p>efectua o scan ao porto em questao.\n"],["service_csv_to_sql","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-service_csv_to_sql","()","<p>Pega no conteudo de um ficheiro CSV  file Cifra o conteudo da linha com a\npassword fornecida pelo utiliador …\n"],["service_parser","Log_analyzer","Log_analyzer.html#method-i-service_parser","(l)","<p>Verifica se o conteudo da linha pertence a algum dos servicos a analizar Ao\nidentificar um servico tenta …\n"],["services","Log_analyzer","Log_analyzer.html#method-i-services","()","<p>Hash com os servicos do ponto de vista para criar uma aplicacao mais\ndinamica é construido um Hash em …\n"],["set_level","Debugger","Debugger.html#method-c-set_level","(l)",""],["sql_to_cap_csv","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-sql_to_cap_csv","()","<p>Pega no conteudo de uma tabela com o conteudo do ficheiro CAP e exporta\npara cap\n<p>DECifra o conteudo da …\n"],["sql_to_csv_service","Sql_Reader_Writer","Sql_Reader_Writer.html#method-i-sql_to_csv_service","(user)","<p>Pega no conteudo de uma tabela com o conteudo do ficheiro CSV ou CAP e\nexporta para CSV  respectivamente …\n"],["start_document","Pdf_report","Pdf_report.html#method-i-start_document","()","<p>Initializa o objecto que gera o pdf\n"],["start_menu","Program","Program.html#method-i-start_menu","()","<p>Desenho do menu de login\n"],["strip_protocol","MachineScan","MachineScan.html#method-i-strip_protocol","()",""],["user_check","Program","Program.html#method-i-user_check","(_user)","<p>verifica a condicao obrigatoria para ser user\n"],["user_menu","Program","Program.html#method-i-user_menu","(user)","<p>desenho do user menu Cada opcao do menu instancia uma classe que pretende\nexecutar o descrito.\n"],["writer_all_log","Pdf_report","Pdf_report.html#method-i-writer_all_log","()","<p>Escreve o mapa no pdf e o acumulado dos hits por pais em cada servico\nanalisado\n"],["writer_by_date","Pdf_report","Pdf_report.html#method-i-writer_by_date","()","<p>Escreve o mapa no pdf e o discriminado por hora e dia dos hits por pais em\ncada servico analisado\n"]]}}